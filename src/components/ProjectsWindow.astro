---
import WindowBase from "./WindowBase.astro";
import { projects } from "../data/projects";
---

<WindowBase
	title="Projects"
	x={480}
	y={300}
	width={560}
	height={360}
	zIndex={14}
	windowId="projects-window"
>
	<div id="projects" class="guide">
		<div class="icon-grid">
			{
				projects.map((p, i) => (
					<button
						class="folder"
						type="button"
						data-target-window-id={`project-${i}-window`}
					>
						<span class="folder-svg" aria-hidden="true">
							<svg
								width="48"
								height="40"
								viewBox="0 0 48 40"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
								shape-rendering="crispEdges"
							>
								<rect
									x="3"
									y="9"
									width="42"
									height="26"
									stroke="#000"
									fill="#D6D1FF"
								/>
								<rect
									x="3"
									y="9"
									width="18"
									height="6"
									fill="#D6D1FF"
									stroke="#000"
								/>
								<rect x="6" y="12" width="36" height="2" fill="#A89FEF" />
								<rect x="5" y="31" width="36" height="2" fill="#A89FEF" />
							</svg>
						</span>
						<span class="icon-label" title={p.title}>
							{p.title}
						</span>
					</button>
				))
			}
		</div>
	</div>
</WindowBase>

<script is:inline>
	(function () {
		const root = document.currentScript.parentElement;
		const grid = root.querySelector(".icon-grid");
		function openWindow(id) {
			try {
				const wm = window.__windowManager;
				if (wm && wm.setVisible) {
					wm.setVisible(id, true);
					return;
				}
			} catch {}
			try {
				window.dispatchEvent(
					new CustomEvent("window-visibility-change", {
						detail: { id, visible: true },
					})
				);
			} catch {}
		}
		grid?.addEventListener("click", (e) => {
			const t = e.target;
			if (!(t instanceof Element)) return;
			const btn = t.closest(".folder");
			if (!btn) return;
			const id = btn.getAttribute("data-target-window-id");
			if (id) openWindow(id);
		});
	})();
</script>

<style is:inline>
	.icon-grid {
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: 18px 12px;
		align-items: start;
	}
	@media (max-width: 640px) {
		.icon-grid {
			grid-template-columns: repeat(2, 1fr);
		}
	}
	.folder {
		display: inline-flex;
		flex-direction: column;
		align-items: center;
		gap: 6px;
		background: transparent;
		border: 0;
		padding: 4px;
		cursor: default;
		text-align: center;
	}
	.folder:focus-visible {
		outline: 1px dotted var(--black);
		outline-offset: 2px;
	}
	.folder-svg svg {
		display: block;
		image-rendering: pixelated;
	}
	.icon-label {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		width: 120px;
		text-align: center;
		white-space: normal;
		overflow: hidden;
		text-overflow: ellipsis;
		overflow-wrap: anywhere;
	}
</style>
